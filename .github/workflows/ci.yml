name: Continious Integration

on:
  workflow_call:

  pull_request:
    branches: ["main", "dev"]
  push:
    branches: ["main"]

env:
  PYTHON_VERSION: 3.11

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pip install poetry
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "poetry"
          cache-dependency-path: poetry.lock
      - name: Install dependencies
        run: poetry install --with lint,test

  lint:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pip install poetry
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}
          cache: "poetry"
          cache-dependency-path: poetry.lock
      - name: Lint with pre-commit
        run: poetry run pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: order
          POSTGRES_HOST: test-db
          POSTGRES_PORT: 5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5435:5435
    steps:
      - uses: actions/checkout@v3
      - name: Install poetry
        run: pip install poetry
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
      - name: Run tests
        run: poetry run pytest tests -s -vv
